facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank())
ggplot(p.df, aes(x=Tissue, y=log2(TPM)), fill= ifelse(p.df$Tissue == "endometrium",1,0)) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank())
ggplot(p.df, aes(x=Tissue, y=log2(TPM), fill= ifelse(p.df$Tissue == "endometrium",1,0))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank())
ggplot(p.df, aes(x=Tissue, y=log2(TPM), color= ifelse(p.df$Tissue == "endometrium",1,0))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank())
p.df$Tissue
ggplot(p.df, aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",p.df$Tissue),1,0))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank())
ggplot(p.df, aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",p.df$Tissue),"endometrium","other"))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank())
ggplot(p.df, aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",p.df$Tissue),"endometrium","other"))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none')
ggplot(p.df, aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",p.df$Tissue),"endometrium","other"))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
scale_color_discrete(values=c("red", "black"))
ggplot(p.df, aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",p.df$Tissue),"endometrium","other"))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
scale_color_manual(values=c("red", "black"))
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(p.df, aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",p.df$Tissue),"endometrium","other"))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
scale_color_manual(values=c("red", "black"))
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",p.df$Tissue),"endometrium","other"))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
scale_color_manual(values=c("red", "black"))
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",p.df$Tissue),"endometrium","other"))) + geom_point() +
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
scale_color_manual(values=c("red", "grey"))
df %>% filter(GWAS == "DEL", P_value <0.01) %>%
left_join(rnaGeneTissue[rnaGeneTissue$Tissue == "endometrium",], by=c('Gene_symbol'="Gene.name")) %>%
arrange(desc(pTPM)) %>% filter(TPM !=0, Gene != "ENSG00000285043") %>%
ggplot(aes(x=reorder(Gene_symbol, TPM), y=log2(TPM), label = Gene_symbol)) + geom_point() + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank()) + labs(x="Gene")+
ggrepel::geom_text_repel()
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",Tissue),"endometrium","other"))) +
geom_point() +
geom_point(data~[grepl("endometrium",Tissue),], aes(x=Tissue, y=log2(TPM)), size=5)+
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",Tissue),"endometrium","other"))) +
geom_point() +
geom_point(data=~[grepl("endometrium",Tissue),], aes(x=Tissue, y=log2(TPM)), size=5)+
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",Tissue),"endometrium","other"))) +
geom_point() +
geom_point(data=~subset(., [grepl("endometrium",Tissue),]), aes(x=Tissue, y=log2(TPM)), size=5)+
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",Tissue),"endometrium","other"))) +
geom_point() +
geom_point(data= ~ subset(., [grepl("endometrium",Tissue),]), aes(x=Tissue, y=log2(TPM)), size=5)+
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM), color= ifelse(grepl("endometrium",Tissue),"endometrium","other"))) +
geom_point() +
geom_point(data= ~ subset(., grepl("endometrium",Tissue)), aes(x=Tissue, y=log2(TPM)), size=5)+
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
scale_color_manual(values=c("red", "grey"))+ ggtitle("Top 6 'candidate' gene expression across tissues")
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM))) +
geom_point(color='grey') +
geom_point(data= ~ subset(., grepl("endometrium",Tissue)), aes(x=Tissue, y=log2(TPM)), size=5)+
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
ggtitle("Top 6 'candidate' gene expression across tissues")
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM))) +
geom_point(color='grey') +
geom_point(data= ~ subset(., grepl("endometrium",Tissue)), aes(x=Tissue, y=log2(TPM)), size=2, color="#068de9")+
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
ggtitle("Top 6 'candidate' gene expression across tissues")
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM))) +
geom_point(color='grey') +
geom_point(data= ~ subset(., grepl("endometrium",Tissue)), aes(x=Tissue, y=log2(TPM)), size=2.5, color="#068de9")+
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
ggtitle("Top 6 'candidate' gene expression across tissues")
df[,1:14] %>% filter(GWAS == "DEL", P_value <0.01, Gene_symbol %in% goi)  %>%
left_join(rnaGeneTissue, by=c('Gene_symbol'="Gene.name"))%>% filter(Gene != "ENSG00000285043") %>% mutate(Tissue = reorder_within(Tissue, TPM, Gene_symbol)) %>%
ggplot(aes(x=Tissue, y=log2(TPM))) +
geom_point(color='grey') +
geom_point(data= ~ subset(., grepl("endometrium",Tissue)), aes(x=Tissue, y=log2(TPM)), size=3, color="#068de9")+
facet_wrap(Gene_symbol~., scales='free') + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), legend.position = 'none') +
ggtitle("Top 6 'candidate' gene expression across tissues")
?chunks
dup.sig %>% filter(GWAS == "DEL", P_value <0.01) %>%
left_join(rnaGeneTissue[rnaGeneTissue$Tissue == "endometrium",], by=c('Gene_symbol'="Gene.name")) %>%
arrange(desc(pTPM)) %>% filter(TPM !=0) %>%
ggplot(aes(x=reorder(Gene_symbol, TPM), y=log2(TPM), label = Gene_symbol)) + geom_point() + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank()) + labs(x="Gene")+
ggrepel::geom_text_repel()
##
p1 <- dup.sig %>%
left_join(rnaGeneTissue[rnaGeneTissue$Tissue == "endometrium",], by=c('Gene_symbol'="Gene.name")) %>%
arrange(desc(pTPM)) %>% filter(TPM !=0) %>%
ggplot(aes(x=reorder(Gene_symbol, TPM), y=log2(TPM), label = Gene_symbol)) + geom_point() + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank()) + labs(x="Gene")+
ggrepel::geom_text_repel()
p1
## top associations
p2<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, P_value)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values= c('red','grey80')) +geom_hline(yintercept =0.5, color='blue', linetype='dotted', size=.75)
p2
## top endo expressed
top_endo_expr <- left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Tissue=="endometrium", !is.na(P_value)) %>% arrange(desc(TPM)) %>% pull(Gene.name)
p3<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% top_endo_expr[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, -TPM)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank()) +
scale_fill_manual(values= c('darkorange','grey80'))
p3
cowplot::plot_grid(p1,plot_grid(p2,p3,ncol=1), nrow=1)
cowplot::plot_grid(p1,cowplot::plot_grid(p2,p3,ncol=1), nrow=1)
##
p1 <- dup.sig %>% left_join(rnaGeneTissue[rnaGeneTissue$Tissue == "endometrium",], by=c('Gene_symbol'="Gene.name")) %>%
arrange(desc(pTPM)) %>% filter(TPM !=0) %>%
ggplot(aes(x=reorder(Gene_symbol, TPM), y=log2(TPM), label = Gene_symbol)) + geom_point() + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank()) + labs(x="Gene")+
ggrepel::geom_text_repel() +ggtitle("Endometrium-specific gene expression (data from GTEx)")
## top associations
p2<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, P_value)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values= c('red','grey80')) +geom_hline(yintercept =0.5, color='blue', linetype='dotted', size=.75)
## top endo expressed
top_endo_expr <- left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Tissue=="endometrium", !is.na(P_value)) %>% arrange(desc(TPM)) %>% pull(Gene.name)
p3<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% top_endo_expr[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, -TPM)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank()) +
scale_fill_manual(values= c('darkorange','grey80'))
cowplot::plot_grid(p1,cowplot::plot_grid(p2,p3,ncol=1), nrow=1)
p3<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% top_endo_expr[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, -TPM)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank()) +
scale_fill_manual(values= c('darkorange','grey80'))+ggtitle("Tissue-specific gene expression (Endo exprs rank)")
## top associations
p2<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, P_value)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values= c('red','grey80')) +geom_hline(yintercept =0.5, color='blue', linetype='dotted', size=.75)+
ggtitle("Tissue-specific gene expression (GWAS rank)")
cowplot::plot_grid(p1,cowplot::plot_grid(p2,p3,ncol=1), nrow=1)
library(tidyverse)
library(cBioPortalData)
library(ExperimentHub)
TPM<-depmap::depmap_TPM()
TPM <- TPM %>% filter(gene_name %in% dup.sig$Gene_symbol)
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value))
ggplot(x,aes(x=cell_line, y=expression,
color=ifelse(grepl("ENDOMETRIUM", cell_line), '1', "2"))) + geom_point() +
facet_wrap(~Gene.name_f, scales = 'free') + theme_bw()+
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
scale_color_manual(values= c('red','grey80')) +scale_alpha_manual(values=c(1,0.5)) +
geom_point(data=x[grepl("ENDOMETRIUM", x$cell_line),], aes(x=cell_line, y=expression),color='red')
x
ggplot(x,aes(x=cell_line, y=expression,
color=ifelse(grepl("ENDOMETRIUM", cell_line), '1', "2"))) + geom_point()
ggplot(x, aes(x=cell_line, y=expression)) + geom_point()
ggplot(x, aes(x=cell_line, y=rna_expression)) + geom_point()
ggplot(x,aes(x=cell_line, y=rna_expression,
color=ifelse(grepl("ENDOMETRIUM", cell_line), '1', "2"))) + geom_point() +
facet_wrap(~Gene.name_f, scales = 'free') + theme_bw()+
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
scale_color_manual(values= c('red','grey80')) +scale_alpha_manual(values=c(1,0.5)) +
geom_point(data=x[grepl("ENDOMETRIUM", x$cell_line),], aes(x=cell_line, y=expression),color='red')
ggplot(x,aes(x=cell_line, y=rna_expression,
color=ifelse(grepl("ENDOMETRIUM", cell_line), '1', "2"))) + geom_point() +
facet_wrap(~Gene.name_f, scales = 'free') + theme_bw()+
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
scale_color_manual(values= c('red','grey80')) +scale_alpha_manual(values=c(1,0.5)) +
geom_point(data=x[grepl("ENDOMETRIUM", x$cell_line),], aes(x=cell_line, y=rna_expression),color='red')
table(x$cell_line)
table(gsub("\\w+_","",x$cell_line)
)
table(gsub("[[:alphanum:]]_","",x$cell_line))
?gsub
table(gsub("[[:alnum:]]_","",x$cell_line))
table(gsub("^[[:alnum:]]_","",x$cell_line))
table(x$cell_line)
table(gsub("$[[:alnum:]]_","",x$cell_line))
table(gsub("[[:alnum:]]","",x$cell_line))
table(gsub("^[[:alnum:]]","",x$cell_line))
x
gsub(^[[:alnum]],"",x$cell_line[1])
gsub"(^([[:alnum]])","",x$cell_line[1])
gsub("^([[:alnum]])","",x$cell_line[1])
x$cell_line[1]
gsub("^([[:alnum:]])","",  x$cell_line[1])
gsub("^([[:alnum:]])+","",  x$cell_line[1])
gsub("^([[:alnum:]])+_","",  x$cell_line[1])
gsub("^([[:alnum:]])+_","",  x)
gsub("^([[:alnum:]])+_","",  x$cell_line)
table(gsub("^([[:alnum:]])+_","",  x$cell_line))
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("^([[:alnum:]])+_","",  cell_line))
x
ggplot(x, aes(x=tissue, y=rna_expression)) + geom_violin()
ggplot(x, aes(x=tissue, y=log2(rna_expression))) + geom_violin()
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5))) + geom_violin()
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_violin()+ geom_point()
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_violin()+ geom_point() +
theme(legend.position = element_blank())
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_violin()+ geom_point() +
theme(legend.position = "none")
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_violin()+ geom_point() +
theme(legend.position = "none")theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_violin()+ geom_point() +
theme(legend.position = "none")+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("_"," ",gsub("^([[:alnum:]])+_","",  cell_line)))
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_violin()+ geom_point() +
theme(legend.position = "none")+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("_"," ",gsub("^([[:alnum:]])+_","",  cell_line))) %>%
mutate(tissue=ifelse(grepl("SKIN", tissue), "SKIN", tissue)))
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("_"," ",gsub("^([[:alnum:]])+_","",  cell_line))) %>%
mutate(tissue=ifelse(grepl("SKIN", tissue), "SKIN", tissue))
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_violin()+ geom_point() +
theme(legend.position = "none")+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_violin()+ geom_point() +
theme(legend.position = "none", axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5), fill=tissue)) + geom_boxplot()+ geom_point() +
theme(legend.position = "none", axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2 <- x %>% filter(tissue== "ENDOMETRIUM")%>% ggplot(aes(x=cell_line, y=rna_expression)) + geom_col()
p2
p2 <- x %>% filter(tissue== "ENDOMETRIUM")%>% ggplot(aes(x=reorder(cell_line, rna_expression), y=rna_expression)) + geom_col()
p2
x %>% filter(tissue== "ENDOMETRIUM")%>% ggplot(aes(x=reorder(cell_line, rna_expression), y=rna_expression)) + geom_col()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
str_extract("^([[:alnum:]])", x$cell_line)
str_extract(x$cell_line, "^([[:alnum:]])")
str_extract(x$cell_line, "^([[:alnum:]])+")
p2 <- x %>% filter(tissue== "ENDOMETRIUM") %>% mutate(cell_line= str_extract(cell_line, "^([[:alnum:]])+")) %>%
ggplot(aes(x=reorder(cell_line, rna_expression), y=rna_expression)) + geom_col()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2
p1 <- ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5))) + geom_boxplot(fill='grey')+
geom_boxplot(data=~subset(., tissue == "ENDOMETRIUM"), aes(x=tissue, y=log2(rna_expression+0.5)),fill='orange') +
geom_point() +
theme(legend.position = "none", axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +theme_bw()
p1
p1 <- ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5))) + geom_boxplot(fill='grey')+theme_bw()+
geom_boxplot(data=~subset(., tissue == "ENDOMETRIUM"), aes(x=tissue, y=log2(rna_expression+0.5)),fill='orange') +
geom_point() +
theme(legend.position = "none", axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p1
x
table(x$gene)
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("_"," ",gsub("^([[:alnum:]])+_","",  cell_line))) %>%
mutate(tissue=ifelse(grepl("SKIN", tissue), "SKIN", tissue), gene=gsub("([0-9]+)","" ,gene))
table(x$gene)
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("_"," ",gsub("^([[:alnum:]])+_","",  cell_line))) %>%
mutate(tissue=ifelse(grepl("SKIN", tissue), "SKIN", tissue), gene=gsub("\([0-9]+\)","" ,gene))
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("_"," ",gsub("^([[:alnum:]])+_","",  cell_line))) %>%
mutate(tissue=ifelse(grepl("SKIN", tissue), "SKIN", tissue), gene=gsub("\\([0-9]+\\)","" ,gene))
x
table(x$gene)
## top associations
x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("_"," ",gsub("^([[:alnum:]])+_","",  cell_line))) %>%
mutate(tissue=ifelse(grepl("SKIN", tissue), "SKIN", tissue), gene=gsub(" \\([0-9]+\\)","" ,gene))
table(x$gene)
p1 <- ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5))) + geom_boxplot(fill='grey')+theme_bw()+
geom_boxplot(data=~subset(., tissue == "ENDOMETRIUM"), aes(x=tissue, y=log2(rna_expression+0.5)),fill='orange') +
geom_point() +
theme(legend.position = "none", axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ ggtitle("Cell line expression") + facet_wrap()
p1 <- ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5))) + geom_boxplot(fill='grey')+theme_bw()+
geom_boxplot(data=~subset(., tissue == "ENDOMETRIUM"), aes(x=tissue, y=log2(rna_expression+0.5)),fill='orange') +
geom_point() +
theme(legend.position = "none", axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ ggtitle("Cell line expression") + facet_wrap(.~gene)
p1
p2 <- x %>% filter(tissue== "ENDOMETRIUM") %>% mutate(cell_line= str_extract(cell_line, "^([[:alnum:]])+")) %>%
ggplot(aes(x=reorder(cell_line, rna_expression), y=rna_expression)) + geom_col()+ theme_bw()+ facet_wrap(.~gene)
p2
p2 <- x %>% filter(tissue== "ENDOMETRIUM") %>% mutate(cell_line= str_extract(cell_line, "^([[:alnum:]])+")) %>%
ggplot(aes(x=reorder(cell_line, rna_expression), y=rna_expression)) + geom_col()+ theme_bw()+ facet_wrap(.~gene, scales = 'free')+
theme(axis.text.x = element_blank())
p2
?facet_grid
p2 <- x %>% filter(tissue== "ENDOMETRIUM") %>% mutate(cell_line= str_extract(cell_line, "^([[:alnum:]])+")) %>%
ggplot(aes(x=reorder(cell_line, rna_expression), y=rna_expression)) + geom_col()+ theme_bw()+ facet_wrap(.~gene, scales = 'free_y')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2
p1
p1 <- ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5))) + geom_boxplot(fill='grey')+theme_bw()+
geom_boxplot(data=~subset(., tissue == "ENDOMETRIUM"), aes(x=tissue, y=log2(rna_expression+0.5)),fill='orange') +
geom_point(alpha=.7) +
theme(legend.position = "none", axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+ ggtitle("Gene expression in cells lines by tissue") + facet_wrap(.~gene)
p2 <- x %>% filter(tissue== "ENDOMETRIUM") %>% mutate(cell_line= str_extract(cell_line, "^([[:alnum:]])+")) %>%
ggplot(aes(x=reorder(cell_line, rna_expression), y=rna_expression)) + geom_col()+ theme_bw()+ facet_wrap(.~gene, scales = 'free_y')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank())+
ggtitle("Gene expression in endometrial cells lines")
cowplot(p1,p2)
cowplot::plot_grid(p1,p2)
save(TPM, file="depmap_tpm.RData")
save(TPM, file="data/depmap_tpm.RData")
library(openxlsx)
library(tidyverse)
setwd("~/../Teaching/Lecture/") ## path where data is stored
sheetNames <- getSheetNames("data/GWAS_3probe.xlsx")
df.list <- lapply(sheetNames, function(i) read.xlsx("data/GWAS_3probe.xlsx", sheet = i))
names(df.list) <- sheetNames
df<-data.table::rbindlist(df.list, fill=T, idcol = "GWAS")
### Pull out the associations significant and unique to duplications -- poor proxy for whole gene duplication
dup.sig <- df %>% filter(GWAS != "DEL", P_value <0.05) %>%
group_by(Gene_symbol) %>%
summarise(n=n(), P_value, Case.overlaps, Control.overlaps, GWAS) %>%
filter(n==1, GWAS == "DUP") %>% arrange(P_value)
save(dup.sig  file="data/wholegene_dup0.05.Rdata")
save(dup.sig,  file="data/wholegene_dup0.05.Rdata")
source("R/1. loading_GWASdata.R")
## 1) How many significant genes
df %>% group_by(GWAS) %>% summarise(n=length(P_value <0.05))
## 2) How many genes were tested across all GWAS
sum(table(df$Gene.ID) ==3)
## 3) How many association overlap between GWAS's
# manual R method
A = df$Gene.ID[df$P_value<0.5 & df$GWAS == "DEL"]
B = df$Gene.ID[df$P_value<0.5 & df$GWAS == "DUP"]
C = df$Gene.ID[df$P_value<0.5 & df$GWAS == "LOF"]
AB = sum(A %in% B & !A %in% C)
AC = sum(A %in% C & !A %in% B)
BC = sum(B %in% C & !B %in% C)
ABC = sum(A %in% B & A %in% C)
A = length(A) - AB - AC - ABC
B = length(B) - AB - BC - ABC
C = length(C) - BC - AC - ABC
# R package to do count and plot data
library(ggvenn)
x<-list(
DEL = df$Gene.ID[df$P_value<0.5 & df$GWAS == "DEL"],
DUP = df$Gene.ID[df$P_value<0.5 & df$GWAS == "DUP"],
LOF = df$Gene.ID[df$P_value<0.5 & df$GWAS == "LOF"]
)
ggvenn(x)
source("R/1. loading_GWASdata.R")
x1 <- lapply(df.list, function(i) i['Gene_symbol'][ i['P_value'] < 0.05,])
## Compare only LOF and DUP
x1[[1]] <-NULL
ggvenn(x1,fill_color = c("#EFC000FF",  "#CD534CFF"), stroke_size = 1, set_name_size = 8, text_size = 6, set_name_color = "white", stroke_color = 'white', text_color = 'white', fill_alpha = 0.8)
ggsave("plots/venn.png")
## Extract table of gene unique to DUP
df %>% filter(GWAS != "DEL", P_value <0.05) %>% group_by(Gene_symbol) %>% summarise(n=n(), P_value, Case.overlaps, Control.overlaps, GWAS) %>%
filter(n==1, GWAS == "DUP")
library(hpar)
#library(tidytext)
# library(magrittr)
load("data/wholegene_dup0.05.Rdata")
data("rnaGeneTissue")
##
p1 <- dup.sig %>% left_join(rnaGeneTissue[rnaGeneTissue$Tissue == "endometrium",], by=c('Gene_symbol'="Gene.name")) %>%
arrange(desc(pTPM)) %>% filter(TPM !=0) %>%
ggplot(aes(x=reorder(Gene_symbol, TPM), y=log2(TPM), label = Gene_symbol)) + geom_point() + theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank()) + labs(x="Gene")+
ggrepel::geom_text_repel() +ggtitle("Endometrium-specific gene expression (data from GTEx)")
## top associations
p2<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, P_value)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values= c('red','grey80')) +geom_hline(yintercept =0.5, color='blue', linetype='dotted', size=.75)+
ggtitle("Tissue-specific gene expression (GWAS rank)")
p2
library(tidytext)
## top associations
p2<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% dup.sig$Gene_symbol[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, P_value)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
scale_fill_manual(values= c('red','grey80')) +geom_hline(yintercept =0.5, color='blue', linetype='dotted', size=.75)+
ggtitle("Tissue-specific gene expression (GWAS rank)")
p2
p1
p3
## top endo expressed
top_endo_expr <- left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Tissue=="endometrium", !is.na(P_value)) %>% arrange(desc(TPM)) %>% pull(Gene.name)
p3<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% top_endo_expr[1:9]) %>%
mutate(Gene.name_f=fct_reorder(Gene.name, -TPM)) %>%
ggplot(aes(x=reorder_within(Tissue, TPM, Gene.name), y=TPM,
fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
facet_wrap(~Gene.name_f, scales = 'free') +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank()) +
scale_fill_manual(values= c('darkorange','grey80'))+ggtitle("Tissue-specific gene expression (Endo exprs rank)")
p3
?rnaGeneTissue
install.packages("hpar")
install.packages("hpar")
BiocManager::install("hpar")
version(hpar)
Version
version
BiocManager::install("hpar")
data("rnaGeneTissue")
library(hpar)
data("rnaGeneTissue")
head(rnaGeneTissue)
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("hpar")
x <- read.delim("rna_tissue_consensus.tsv")
head(x)
head(rnaGeneTissue)
getHpaVersion()
library(hpar)
install.packages("vctrs")
#library(hpar) ## there is built in data but poor descriptions.
library(tidyverse)
install.packages('dyplr')
install.packages('dplyr')
install.packages("dplyr")
#library(hpar) ## there is built in data but poor descriptions.
library(tidyverse)
