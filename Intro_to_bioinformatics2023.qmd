---
title: "Copy Number Variants and Cancer"
author: "and some R/bioinformatics"
format: 
  revealjs:
    theme: [dark, custom.scss]
    incremental: true
editor: visual
header-includes: |
      <link rel="stylesheet" media="screen" href="https://fonts.googleapis.com/css2?family=Amatic+SC&display=swap" type="text/css"/>
---

## Lecture Plan

- Background 
    - Genomic variation
    -  Copy number variants
    -  Genetic risk in Cancer
    -  Computational biology: Pro's <fade>(and con's)</fade> 
    
- Case example: Endometerial cancer and copy number variants

```{r load_data, echo=F, eval=T, cache=T}
library(dplyr)
library(openxlsx)
library(kableExtra) ## for html tables
sheetNames <- getSheetNames("data/GWAS_3probe.xlsx")
df <- lapply(sheetNames, function(i) read.xlsx("data/GWAS_3probe.xlsx", sheet = i))
names(df) <- sheetNames
df<-data.table::rbindlist(df, fill=T, idcol = "GWAS")
```

<!-- . . . -->

<!-- [Cassie Stylianou]{class='csText'}  -->
<!-- [George Wiggins]{class='gwText'}  -->

<!-- ![Cassie Stylianou](images/cass.jpg){.cass} ![George Wiggins](images/cropped.jpg){.george} -->


## Genomic variation

![](images/typeofvariants.png)

## Copy number variants
:::{.nonincremental}

- Copy number variants (CNV) are a subset of structural variants
    - CNVs are the number of copies of a DNA loci (i.e. genes) that vary between individuals.

- 10% of the human genome contributes to CNVs^1^, 1% of human genome contributes to SNPs.

- Rare CNV (<1% MAF) are 800x more likely to be deleterious compared to rare SNV^2^. 

:::{.reference}
^1^ Zarrei et al. (2015) Nat Rev Genet. 16, 172-183.

^2^ HJ Abel et al. (2020). Nature. 583,83-89.

<!-- PJ Hastings et al. (2009) Nat Rev Genet. 10,551-564.  -->
:::
:::

## CNV detection


:::{.nonincremental style="margin-left:-100px; width:57.5%"}
1. Fluorescence in situ hybridization (FISH) 
2. Array Comparative genomic hybridization (CGH)
3. qPCR
4. MLPA
5. SNP array
6. Next-generation sequencing
:::

![](images/CNV_detection.png){.absolute top="50px" right="-100px" width="55%"}

##

:::{.quote}
Cancer is the most common human genetic disease. The transition from a normal cell to a malignant cancer is driven by changes to a cell’s DNA.
:::

![](images/Tumor_progression.png){.absolute bottom="0" width="1000"}

<!-- Individuals with cancer effectively have two (or more) genomes. **Germline** and **somatic** both are useful clinically -->

## Genetic Risk of Cancer

DNA variants alter the risk of cancer.
  
![](images/BC_risk_B1B2.png){.absolute left="0" top="200" width="500"}
![](images/B1_B2_risk.png){.absolute right="20" top="200" width='450'}

:::{.reference}
Kuchenbaecker et al. (2017) JAMA. 317(23), 2402-2416.
:::


## Genetic Risk of Cancer{.smaller}

There are 313 common genetic variants associated with a low increase in breast cancer risk. There is up to a 4-fold increase in breast cancer for woman that harbour the greatest number of these risk allele^1^.  
  
![](images/BC_risk_common.png){.absolute left="0" width="500"}
![](images/polygenic.png){.absolute right="150" width="320"}

:::{.reference}
^1^ N. Zeinomar &  W.K. Chung (2020) Ann Intern Med. 174(3), 408-412.
:::


## Why Computational Biology?

::: smaller-font
-   Lots of data (dataset sizes and databases)
-   Visualisation - makes a big problem seem small

::: fragment
[Example: Gene expression data from **25,000 genes** for two cell lines with two treatments]{.description}

![](plots/pca_unlabelled.png){.pca-left}
:::

::: fragment
![](plots/pca_labelled.png){.pca-right}
:::
:::

## Why Computational Biology?

::: smaller-font
::: nonincremental
-   Lots of data (dataset sizes and databases)
-   Visualisation - makes a big problem seem small
-   Efficiency
-   New tools and methods - simulations, statistics
:::

::: fragment
Barriers:
:::

-   Can seem 'foreign' and difficult to learn
-   Requires a solid statistical foundation (can be learnt on the fly)
-   Can over-engineer solution
:::

<!-- # Biology is Complex -->

<!-- ##  {background-image="images/bases.png" background-color="white" background-size="cover"} -->

<!-- ##  {background-image="images/bases_annotated.png" background-color="white" background-size="cover"} -->

## Omics' data is complex and LARGE {.smaller}

|                     |      File Type      |           Size |    No. Features    |
|------------------|:----------------:|-----------------:|:----------------:|
| Next Gen Sequencing | base calls (.fastq) |      10-100 Gb |  Up to everything  |
| Microarray          |     Intensities     | 100 Mb - 10 Gb | 10,000s - millions |

: Types of omics' data

![](images/fastq1.png){.absolute bottom="50" left="125" width="800"}

# Introduction to R

## R and Rstudio <img src="images/R_logo.png" class="r" height="100px" style="vertical-align:middle;"/> <img src="images/Rstudio.png" class="rstudio" height="100px" style="vertical-align:middle;"/>

R is a programming language commonly used in the biological sciences.

. . .

It is not the only suitable language (Python, C++, Bash)

. . .

<br>RStudio is an integrated development environment (IDE) for R. Basically, makes R more usable.

## R terminology

```{r eval=F, echo=T}
#| code-line-numbers: "1-4|6-7|9-10|12-13|15-19|21-24|26-29"
## variables
x <- 1 
y <- c(1,2,3)
z <- c("a","b","c")

## matrices
m <- matrix(c(1,3,2,5,-1,2,2,3,9),nrow=3)

## data.frames
df <- data.frame(col1=z, col2=y, col3=c("a",1,"c"))

## lists
list.df <- list(df,mtcars, iris)

## functions
mean(c(1,2,5,23,43))
sd(y)
y2 <- y*sample(5:50,1) ## multiple y by a random number between 5-50
t.test(y,y2)

## libraries (suites of functions)
library(tidyverse) ## used for data wrangling
library(ggplot2) ## nicer plotting
library(openxlsx) ## read data store in as excel files

## installing libraries(packages)
install.packages('devtools') ## if on CRAN
BiocManager::install("hpar") ## if on bioconductor
devtools::install_github("yanlinlin82/ggvenn") ## if on github
```

# Genetic Risk of Endometrial Cancer<br>[Cassie's PhD]{.description}

## Genetic Risk: [Small variants]{style="color:#068de9"}

![Dörk, T. et al. Cancers (2020), 12(9).](plots/EC_risk.png){height="500px"}

## Genetic Risk: [Copy number variants]{style="color:#068de9"} {.smaller}

Copy number variants are regions of genome where the number of copies differ between individuals.

How do these variant effect cancer risk?

::: {.fragment .fade-out}
![](images/CNV2.png){.absolute bottom="100" right="10" width="300"}
:::

. . .

::: subheading
Cassie's dataset
:::

::: columns
::: {.column .nonincremental width="60%"}
-   Woman genotyped with (case) and with out EC
-   CNVs called from array data (gene-centric) and associations study (GWAS) performed
-   3 GWAS types: Deletions, duplication and Loss of function
:::

::: {.column width="40%"}
|   \-    | Number of samples |
|:-------:|------------------:|
|  Case   |             4,155 |
| Control |            17,818 |
:::
:::

## SNP array and CNVs {.smaller auto-animate="true"}

:::{style="right:-100px;position:absolute;width:45%;font-size: 0.9em;"}
$BAF = A/B$

$Log R Ratio = log2(R~observed~/R~expected~)$

:::

:::{style="right:-100px;position:absolute;width:45%;top:190px"}
Deletion (example):
Only one copy of DNA, therefore the observed intensity (R) is less than expected and all the signal will either be the A (BAF=0) or B (BAF=1) allele.

:::

![](plots/CNVvalling.png){.absolute top="80" left="-100" width="750"}

## Genome-wide association study {.smaller auto-animate="true"}

![](plots/CNVvalling.png){.absolute top="90" left="10" width="350"} ![](images/flowchart.png){.absolute top="80" left="30" width="1000"}

<!-- ## Data/results interrogation -->

<!-- ::: columns -->
<!-- ::: {.column width="65%"} -->
<!-- Do we believe the results? -->

<!-- Can the results be explained away by limitations/biases? -->
<!-- ::: -->

<!-- ::: {.column style="font-size:1.1rem; width:35%"} -->
<!-- [GWAS results]{style="font-size:2.5rem;"} -->

<!-- | CNV type | No. genes tested | -->
<!-- |----------|-----------------:| -->
<!-- | Del      |            5,608 | -->
<!-- | Dup      |            7,887 | -->
<!-- | LoF      |            8,071 | -->
<!-- ::: -->
<!-- ::: -->

<!-- . . . -->

<!-- [Let's ask some *very basic* questions:]{style="color:#068de9"} -->

<!-- -   How many associations were significant? -->
<!-- -   How many genes were tested across by all three GWAS? -->
<!-- -   How many significant association overlap (Venn Diagram)? -->

<!-- ## Excel vs R {.smaller} -->

<!-- How many associations were significant? -->

<!-- . . . -->

<!-- Excel (easy): -->

<!-- -   filter by p-value ➙ count rows -->
<!--     -   repeat per GWAS -->

<!-- ::: {.fragment .fade-in} -->
<!-- R (easy/over-engineered): -->

<!-- ```{r eval=F, echo=T} -->
<!-- #| code-line-numbers: "1-7|9" -->

<!-- library(openxlsx) -->
<!-- library(tidyverse) -->
<!-- ## Read in data -->
<!-- sheetNames <- getSheetNames("data/GWAS_3probe.xlsx") -->
<!-- df <- lapply(sheetNames, function(i) read.xlsx("data/GWAS_3probe.xlsx", sheet = i)) -->
<!-- names(df) <- sheetNames -->
<!-- df<-data.table::rbindlist(df, fill=T, idcol = "GWAS") -->

<!-- df %>% group_by(GWAS) %>% summarise(n=length(P_value <0.05)) -->
<!-- ``` -->
<!-- ::: -->

<!-- ## Excel vs R {.smaller} -->

<!-- How many genes were tested across by all three GWAS? -->

<!-- . . . -->

<!-- Excel (moderate/cumbersome): -->

<!-- 1.  Create unique list of all genes -->
<!-- 2.  `=countif(AllGenesinGWAS1, gene)` -->
<!--     -   repeat per GWAS -->
<!-- 3.  Sum counts ➙ filter and count rows equal to three -->

<!-- ::: {.fragment .fade-in} -->
<!-- R (easy): -->

<!-- ```{r eval=F, echo=T} -->
<!-- #| code-line-numbers: "9" -->

<!-- library(openxlsx) -->
<!-- library(tidyverse) -->
<!-- ## Read in data -->
<!-- sheetNames <- getSheetNames("data/GWAS_3probe.xlsx") -->
<!-- df <- lapply(sheetNames, function(i) read.xlsx("data/GWAS_3probe.xlsx", sheet = i)) -->
<!-- names(df) <- sheetNames -->
<!-- df<-data.table::rbindlist(df, fill=T, idcol = "GWAS") -->

<!-- sum(table(df$Gene.ID) ==3) # only line to change -->
<!-- ``` -->
<!-- ::: -->

<!-- ## Excel vs R {.smaller} -->

<!-- How many significant association overlap (Venn Diagram)? -->

<!-- . . . -->

<!-- Excel (Difficult): -->

<!-- -   Nested countifs with multiple criteria? -->
<!-- -   Is a very manual process -->

<!-- ## Excel vs R {.smaller} -->

<!-- How many significant association overlap (Venn Diagram)? -->

<!-- R (easy): -->

<!-- ```{r tri-venn, eval=T, echo=T} -->
<!-- #| output-location: column -->
<!-- #| code-line-numbers: "3,11-18" -->
<!-- #| cache: true -->
<!-- #| fig-height: 7.5 -->
<!-- library(openxlsx) -->
<!-- library(tidyverse) -->
<!-- library(ggvenn) ## New package -->

<!-- ## Read in data -->
<!-- sheetNames <- getSheetNames("data/GWAS_3probe.xlsx") -->
<!-- df <- lapply(sheetNames, function(i) read.xlsx("data/GWAS_3probe.xlsx", sheet = i)) -->
<!-- names(df) <- sheetNames -->
<!-- df<-data.table::rbindlist(df, fill=T, idcol = "GWAS") -->

<!-- x<-list( -->
<!--   DEL = df$Gene.ID[df$P_value<0.05 & df$GWAS == "DEL"],  -->
<!--   DUP = df$Gene.ID[df$P_value<0.05 & df$GWAS == "DUP"], -->
<!--   LOF = df$Gene.ID[df$P_value<0.05 & df$GWAS == "LOF"]  -->
<!-- ) -->

<!-- ggvenn(x,fill_color = c("#0073C2FF", "#EFC000FF",  "#CD534CFF"), -->
<!--   stroke_size = 1, set_name_size = 8, text_size = 8, show_percentage = F) -->

<!-- ``` -->

# [HYPOTHETICAL:]{style="color: #d56262;"}<br> [Whole gene duplications and Endometiral Cancer risk?]{.question-heading}

## Approach

Cassie's loss of function data used CNV predicted that:

1)  Delete a gene (part of or entire gene)
2)  Partially duplicated a gene (**not** whole gene)

:::{.fragment .fade-in-then-out}
![](images/LoF_selection.png){.absolute bottom="180" width="520" left="225"}
:::

. . .

Duplication are frequently in tandem, therefore partial gene duplications would disrupt coding sequence.

. . .

<br>

*Only the 'duplication' GWAS tested whole gene duplications.*

## Whole gene duplications {.smaller .nonincremental}


1)  Find significant associations (genes) unique to the duplication GWAS [(i.e. whole gene duplications)]{style="color:#068de9"}


. . .

::: columns
::: {.column width="65%"}
```{r echo=T, eval=F}
library(openxlsx)
library(tidyverse)
## Read in data
sheetNames <- getSheetNames("data/GWAS_3probe.xlsx")
df <- lapply(sheetNames, function(i) read.xlsx("data/GWAS_3probe.xlsx", sheet = i))
names(df) <- sheetNames
df<-data.table::rbindlist(df, fill=T, idcol = "GWAS")

df %>% filter(GWAS != "DEL", P_value <0.05) %>% 
  group_by(Gene_symbol) %>% 
  summarise(n=n(), GWAS) %>%
  filter(n==1, GWAS == "DUP")
```

```{r echo=F, eval=T}
library(dplyr)
library(kableExtra)
df %>% filter(GWAS != "DEL", P_value <0.05) %>% group_by(Gene_symbol) %>% summarise(n=n(), P_value, Case.overlaps, Control.overlaps, GWAS) %>%
  filter(n==1, GWAS == "DUP") %>% arrange(P_value) %>%select(!c(GWAS, n))%>% mutate(P_value = format(P_value, digits=3, scientific=T) )%>% head() %>%
  kbl(digits=3,col.names = c("Gene Symbol", "p value", "Cases", "Controls"),
      table.attr = "style='width:100%;margin-top:20px;'")%>%
  kable_styling(font_size = 20, full_width = T)

```
:::

::: {.column width="30%"}
![](plots/venn.png){.absolute top="250" right="0" width="350"}
:::
:::

# What next

More analysis (e.g. Pathway analysis) and more context (e.g. what tissue is gene expressed?)

-   Databases (GTEx, Human Protein Atlas, TCGA/cbioportal, CCLE)

## Pathway analysis {.mid}

- Size reduction: 100's-1000’s of genes ➙ dozens of pathways
- Tells a biological story

. . .

[Many]{style="font-weight:1000"} different methods

:::{.fragment .fade-out}

![](images/ORA.png){.absolute bottom="70" left="30"}

:::
:::{.fragment style="line-height:0.8"}
[Many]{style="font-weight:1000"} annotation (gene groupings)

- KEGG
- Reactome
- Wikipaths
- Gene ontology (GO)


:::

## Performing pathway analysis {.smaller}

Webtools:

[Enrichr](https://maayanlab.cloud/Enrichr/), [Panther](http://www.pantherdb.org/), 
[DAVID](https://david.ncifcrf.gov/), ...

. . .

R:

```{r pathway_analysis_table, echo=T}
#| output-location: column-fragment
#| cache: true
#| fig-height: 7.5

library(clusterProfiler)
library(org.Hs.eg.db)

load("data/wholegene_dup0.05.Rdata")
entrezid<-mapIds(org.Hs.eg.db, 
                 keys= dup.sig$Gene_symbol, 
                 column="ENTREZID", 
                 keytype="SYMBOL")
entrezid<-entrezid[!is.na(entrezid)]


ego <- enrichGO(gene          = entrezid,
                OrgDb         = org.Hs.eg.db,
                ont           = "BP",
                pvalueCutoff  = 1,
                qvalueCutoff  = 1,
                readable      = TRUE)


barplot(ego, color="pvalue")
```

## Pathway analysis - Deletions {.smaller}

More interesting enrichment analysis for significant deletions:


```{r dels, echo=F, eval=T}
#| cache: true
#| fig-height: 7.5
x<-df %>% filter(GWAS == "DEL" & P_value < 0.05) %>% pull(Gene_symbol)

ego2 <- enrichGO(gene          = x,
                OrgDb         = org.Hs.eg.db,
                ont           = "BP",
                pAdjustMethod = "BH",
                pvalueCutoff  = 1,
                qvalueCutoff  = 1,
                keyType = "SYMBOL",
                readable      = TRUE)

barplot(ego2, color="pvalue")
```


## Utlising public data

[**Human Protein Atlas, GTEx**]{style="color:#068de9"}, TCGA and CCLE 


```{r hpar, cache=TRUE}
library(tidyverse)
library(tidytext)

load("data/wholegene_dup0.05.Rdata")
rnaGeneTissue <- read.delim("data/rna_tissue_consensus.tsv")

p1<-dup.sig %>% left_join(rnaGeneTissue[rnaGeneTissue$Tissue == "endometrium",], by=c('Gene_symbol'="Gene.name")) %>%
  arrange(desc(nTPM)) %>% filter(nTPM !=0) %>%
  ggplot(aes(x=reorder(Gene_symbol, nTPM), y=log2(nTPM), label = Gene_symbol)) + geom_point() + theme_bw() + 
  theme(axis.text.x = element_blank(), axis.ticks.x=element_blank()) + labs(x="Gene")+
  ggrepel::geom_text_repel() +ggtitle("Endometrium-specific gene expression (data from GTEx)")

top_endo_expr <- left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Tissue=="endometrium", !is.na(P_value)) %>% arrange(desc(nTPM)) %>% pull(Gene.name)
p2<-left_join(rnaGeneTissue, dup.sig[, c("Gene_symbol","P_value")], by=c("Gene.name"="Gene_symbol")) %>% filter(Gene.name %in% top_endo_expr[1:9]) %>%
  mutate(Gene.name_f=fct_reorder(Gene.name, -nTPM)) %>%
  ggplot(aes(x=reorder_within(Tissue, nTPM, Gene.name), y=nTPM,
             fill= ifelse(Tissue == "endometrium", '1', "2"))) +geom_col() + theme_bw() +
  facet_wrap(~Gene.name_f, scales = 'free') + 
  theme(legend.position = 'none',
        axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks = element_blank()) +
  scale_fill_manual(values= c('darkorange','grey80'))+ggtitle("Tissue-specific gene expression (Endo exprs rank)")

cowplot::plot_grid(p1,p2, nrow=1)

```


## Utlising public data

Human Protein Atlas, GTEx, [**TCGA**]{style="color:#068de9"} and CCLE 

```{r TCGA, cache=TRUE}
library(tidyverse)
library(cBioPortalData)
cbio <- cBioPortal()

study <- 'ucec_tcga_pan_can_atlas_2018'
rna <- 'ucec_tcga_pan_can_atlas_2018_rna_seq_v2_mrna_median_Zscores'
cn <- 'ucec_tcga_pan_can_atlas_2018_gistic'
ucec_pan <- cBioPortalData(
  cbio, 
  studyId= study,
  molecularProfileIds = c(rna, cn),
  genes = unique(dup.sig$Gene_symbol),
  by = 'hugoGeneSymbol'
)

RNA <- assays(ucec_pan)[[1]] %>% as.data.frame() %>% rownames_to_column("Gene") %>% pivot_longer(values_to="RNA", names_to="sampleID", -Gene)
CN <- assays(ucec_pan)[[2]] %>% as.data.frame() %>% rownames_to_column("Gene")%>% pivot_longer(values_to="CN", names_to="sampleID", -Gene)

## keep only genes and samples that have data for RNA and copy number
samples <- unique(RNA$sampleID)[unique(RNA$sampleID) %in% unique(CN$sampleID)]
genes <- unique(RNA$Gene)[unique(RNA$Gene) %in% unique(CN$Gene)]
RNA <- RNA %>% filter(Gene %in% genes, sampleID %in% samples)
CN <- CN %>% filter(Gene %in% genes, sampleID %in% samples)

## Test to see if RNA and CN data is in the same order before merging
RNA_CN <- RNA %>% mutate(CN = CN$CN)

## Select top genes to display
p1 <- RNA_CN %>% filter(Gene %in% dup.sig$Gene_symbol[1:9], !is.na(RNA)) %>%
  ggplot(aes(x=CN, y=RNA, group=CN)) + geom_boxplot() + facet_wrap(.~ Gene, scales='free') + 
  theme_bw()

p2 <- RNA_CN %>% filter(Gene == "ACTR3B", !is.na(RNA))%>%
  ggplot(aes(x=CN, y=RNA, group=CN)) + geom_boxplot() + theme_bw()


cowplot::plot_grid(p1,p2)
```

## Utlising public data

Human Protein Atlas, GTEx, TCGA and [**CCLE**]{style="color:#068de9"} 

```{r cell_line}
library(tidyverse)

load("data/depmap_tpm.RData")

x = left_join(TPM, dup.sig[, c("Gene_symbol","P_value")], by=c("gene_name"="Gene_symbol")) %>% filter(gene_name %in% dup.sig$Gene_symbol[1:9]) %>% 
  mutate(Gene.name_f=fct_reorder(gene_name, P_value)) %>% mutate(tissue=gsub("_"," ",gsub("^([[:alnum:]])+_","",  cell_line))) %>%
  mutate(tissue=ifelse(grepl("SKIN", tissue), "SKIN", tissue), gene=gsub(" \\([0-9]+\\)","" ,gene))


ggplot(x, aes(x=tissue, y=log2(rna_expression+0.5))) + geom_boxplot(fill='grey')+theme_bw()+
  geom_boxplot(data=~subset(., tissue == "ENDOMETRIUM"), aes(x=tissue, y=log2(rna_expression+0.5)),fill='red') +
  geom_point(alpha=.5, size=.5) +
  theme(legend.position = "none", axis.title.x = element_blank())+
  theme(axis.text.x = element_blank())+ ggtitle("Gene expression in cells lines by tissue") + facet_wrap(.~gene)
```


## Utlising public data

Human Protein Atlas, GTEx, TCGA and [**CCLE**]{style="color:#068de9"} 

```{r CCLE_2}
#| fig-width: 9.5
#| fig-height: 5
library(tidyverse)
x %>% filter(tissue== "ENDOMETRIUM") %>% mutate(cell_line= str_extract(cell_line, "^([[:alnum:]])+")) %>%
  ggplot(aes(x=reorder(cell_line, rna_expression), y=rna_expression)) + geom_col()+ theme_bw()+ 
  facet_wrap(.~gene, scales = 'free_y')+ 
  theme(axis.text.x = element_text(size = 6,angle = 90, vjust = 0.5, hjust=1),
        axis.title.x = element_blank())+ 
  ggtitle("Gene expression in endometrial cells lines")
```


## Ranking potential candidates
```{r}
TCGA <- read.csv("data/TCGA_ucec_geneDosage.csv")
HPA <- read.csv("data/HPA_expressionScore.csv")
load("data/depmap_tpm.RData")

TPM_binary = TPM %>% filter(grepl("AN3CA|ISHIKAWAHERAKLIO02ER", cell_line)) %>% 
  mutate(cell_line = gsub("_ENDOMETRIUM", "", cell_line)) %>% group_by(cell_line, gene) %>% 
  summarise(exprs = ifelse(rna_expression > 1, 3,1)) %>% 
  pivot_wider(names_from=cell_line, values_from=exprs) %>% mutate(gene=gsub(" \\([0-9]+\\)","", gene))


dosage_score <- c()
for(i in 1:nrow(TCGA)){
  if(TCGA$estimate[i] < 0.22){
    dosage_score <- c(dosage_score, ifelse(TCGA$p.value[i] >=0.05,1,2))
  }else if(TCGA$estimate[i] >= 0.22 &  TCGA$estimate[i] < 0.3){
    dosage_score <- c(dosage_score,3)
  } else{
    dosage_score <- c(dosage_score,4)
  }
}

TCGA %>% mutate(dosage_score =dosage_score) %>% left_join(HPA, by=c("Gene" = "Gene.name")) %>%
  left_join(TPM_binary, by=c("Gene" = "gene")) %>% 
  mutate(total.score = dosage_score+exps.score+AN3CA+ISHIKAWAHERAKLIO02ER) %>% slice_sample(n=50) %>%
  pivot_longer(c("exps.score", "dosage_score", "AN3CA", "ISHIKAWAHERAKLIO02ER"))  %>% mutate(name = fct_relevel(name, "exps.score", "dosage_score", "AN3CA","ISHIKAWAHERAKLIO02ER")) %>%
  ggplot(aes(x=name, y=Gene, fill=value)) + geom_tile(color='black')+
  scale_fill_gradient2(low = "#075AFF",
                       high = "#FF0000") + theme_bw() +
    scale_x_discrete(labels=c("Endometrial expression", "Gene Dosage", "AN3CA", "Ishikawa"))+
  theme(axis.title = element_blank())
```


## {.final}
